
逐行处理的流处理器
当使用 sed 时，要记住的重要事项是它的工作方式。它的工作方式是：读入一行，在该行上执行它已知要执行的所有任务，
然后继续处理下一行。每一行都受给定的每一个编辑命令的影响。 

sed [options] '{command}' [filename] | or >

------------------------------------------------------------------------------------------------------
不同命令的串联：对某一行进行多次修改
方法一：是使用 "-e" 选项，它通知程序使用了多条编辑命令  
sed -e ' s/tiger/wolf/' -e 's/after/before/' 
方法二：是使用分号来分隔命令
sed 's/tiger/wolf/; s/after/before/' ------------“注意分号必须是紧跟斜线之后的下一个字符”
------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------
一次替换操作：'s/"old"/"new"/'
多次全局替换操作：'s/"old"/"new"/g'
------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------
条件且匹配替换：'/条件/ command' 
行数条件替换：'x,y command' 
行数条件替换：'x command' 
行数和条件替换：'x,/条件/ command' 
末尾条件操作：'$ command'
开头条件操作：'^ command'
------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------
注意当调用 "-f" 选项时，在源文件内或命令行中不使用撇号,这是源文件执行方式
$ cat sedlist 
/two/ s/1/2/ 
/three/ s/1/3/ 

$ sed -f sedlist file
------------------------------------------------------------------------------------------------------

插入操作：'i' :注 在前插入
添加操作：'a' :注 在后插入
删除操作：'d' :注 是对整行进行操作的 把符合条件的某一行删除
写入操作：'w'
修改操作：'c' :注 是对整行进行操作的 把符合条件的某一行修改成新的值！
反操作  ：'!command'
中断Sed：'q'  :注 sed 默认读取整个文件，并只在到达末尾时才停止。
                  不过，您可以使用退出命令提前停止处理。只能指定一条退出命令，
                  而处理将一直持续直到满足调用退出命令的条件。





